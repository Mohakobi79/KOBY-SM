import yts from 'yt-search';
import fetch from 'node-fetch'; // ØªØ£ÙƒØ¯ Ù…Ù† ØªØ«Ø¨ÙŠØª node-fetch

const handler = async (m, { conn, text, usedPrefix, command }) => {
  if (!text) {
    throw `\`\`\`[ ðŸŒ´ ] Por favor ingresa un texto. Ejemplo:\n${usedPrefix + command} Did i tell u that i miss you\`\`\``;
  }

  const search = await yts(text);

  if (!search.all || search.all.length === 0) {
    throw "No se encontraron resultados para tu bÃºsqueda.";
  }

  const videoInfo = search.all[0];
  const body = `\`\`\`âŠœâ”€âŒˆ ðŸŽµ â—œYouTube Playâ—ž ðŸŽµ âŒ‹â”€âŠœ

    â‰¡ TÃ­tulo : Â» ${videoInfo.title}
    â‰¡ Views : Â» ${videoInfo.views}
    â‰¡ Duration : Â» ${videoInfo.timestamp}
    â‰¡ Uploaded : Â» ${videoInfo.ago}
    â‰¡ URL : Â» ${videoInfo.url}

# ðŸŒ´ Su Audio se estÃ¡ enviando, espere un momento...\`\`\``;

  conn.sendMessage(m.chat, {
    image: { url: videoInfo.thumbnail },
    caption: body,
  }, { quoted: m });

  try {
    // ØªÙ†Ø²ÙŠÙ„ Ø§Ù„Ù…Ù‚Ø·Ø¹ Ø§Ù„ØµÙˆØªÙŠ
    const response = await fetch(`https://api.siputzx.my.id/api/dl/youtube/mp3?url=${videoInfo.url}`);
    const result = await response.json();

    if (!result || !result.data) {
      throw "No se pudo obtener el enlace de descarga.";
    }

    const audioUrl = result.data;

    // Ø¥Ø±Ø³Ø§Ù„ Ø§Ù„Ù…Ù‚Ø·Ø¹ Ø§Ù„ØµÙˆØªÙŠ
    await conn.sendMessage(m.chat, {
      audio: { url: audioUrl },
      mimetype: "audio/mpeg",
      ptt: false, // Ù„ØªØ­ÙˆÙŠÙ„ Ø§Ù„ØµÙˆØª Ø¥Ù„Ù‰ Ù…Ù„Ø§Ø­Ø¸Ø© ØµÙˆØªÙŠØ© (PTT)
    }, { quoted: m });

  } catch (error) {
    console.error(error);
    throw "OcurriÃ³ un error al procesar tu solicitud.";
  }
};

handler.command = handler.help = ['play'];
handler.tags = ['downloader'];


export default handler;

const getVideoId = (url) => {
  const regex = /(?:v=|\/)([0-9A-Za-z_-]{11}).*/;
  const match = url.match(regex);
  if (match) {
    return match[1];
  }
  throw new Error("Invalid YouTube URL");
};